I"Ó<p>I just wanted to document the creation process of creating this website. The goal of this site is to share what I do with you. I will be promoting my woodworking projects and everything I deem showable of the free time stuff going on here.</p>

<p>So I needed a simple vessel to present that. Here we are with the technicals:</p>

<p><br /></p>
<h4 id="installing-brew">Installing brew</h4>
<p>Brew is a package manager for macOS. It is immensly useful to install things and keep them up to date. <a href="https://brew.sh">brew.sh</a></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>xcode-select --install
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
</code></pre></div></div>

<p>Enter your macOS password</p>

<p>The installation should perform without any errors.</p>

<p><br /></p>
<h4 id="installing-ruby">Installing ruby</h4>
<p>macOS uses an old version of ruby by default and it‚Äôs increasingly hard to update it with the latest updates because you encounter permission errors so the best way to go around this problem is installing a virtual environment to then install a version of ruby inside like rbenv or RVM or you can install a ruby changer for the whole system like chruby.
In my case I chose chruby and its friend ruby-install. Ruby-install will install from source any version of ruby so chruby can select the one to use system wide.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ruby -V   #Will output your current version of ruby
brew install churby ruby-install -y
chruby -V   #To see if it's installed properly
ruby-install ruby 2.7.2   #Will install ruby 2.7.2 from source in chruby
chruby ruby 2.7.2   #Set ruby 2.7.2 system wide
ruby -V   #Should now be 2.7.2. Ready to go!
</code></pre></div></div>

<p><br /></p>
<h4 id="installing-bundler-and-jekyll">Installing Bundler and Jekyll</h4>
<p>As per jekyll website <a href="https://jekyllrb.com">jekyllrb.com</a>, you need bundler and jekyll to be on the right track.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem update --system   #to make sure your gem is up to date
gem install bundler jekyll
echo 'export PATH="$HOME/.gem/ruby/2.7.0/bin:$PATH"' &gt;&gt; ~/.zshrc
</code></pre></div></div>

<p><br /></p>
<h4 id="selecting-a-theme-and-forking-it-to-your-github-account">Selecting a theme and forking it to your github account</h4>
<p>I selected the theme clean blog on <a href="http://jekyllthemes.org/themes/clean-blog/">jekyllthemes.org</a>. Then went to it‚Äôs homepage and clicked on Fork to add it to your github account. You need to have one beforehand. Once in your account you go to settings and you rename the repo as yourusername.github.io then you save that. if you want to use a custom domain name we will cover that later.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install git -y
git config --global user.name ‚Äúyour_github_username‚Äù
git config --global user.email "your_email@github.com"
git config --global core.editor "atom --wait"
</code></pre></div></div>

<p>Now create a Dev folder on your macOS to keep things organised. In your new yourusername.github.io repo you have to follow the Using Core Files guide.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd ~
mkdif Dev
cd Dev
git clone https://github.com/yourusername/yourusername.github.io.git  #This will copy the repo to a new directory in your Dev directory.
cd yourusername.github.io
</code></pre></div></div>

<p><br /></p>
<h4 id="using-atom-as-the-ide">Using atom as the IDE</h4>
<p>Install atom <a href="https://atom.io">atom.io</a></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew cask install atom -y
cd ~/Dev/yourusername.github.io
atom .  #This tells atom to open the current directory.
</code></pre></div></div>

<p>Now you need to go in the menu bar and install Shell commands. Then close atom and reopen it in the terminal. You can now update the _config.yml file with your info.</p>

<p><br /></p>
<h4 id="starting-jekyll-server-and-setting-a-theme-to-work-from">Starting Jekyll server and setting a theme to work from</h4>
<p>In the terminal you can now start the server and test it in a browser at localhost:4000</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd ~/Dev/yourusername.github.io
bundle exec jekyll serve
</code></pre></div></div>

<p>You should see the clean blog theme in your browser. Now it‚Äôs time to customize it the way you want. Time to learn how jekyll, bootstrap, css, html works. let‚Äôs put <a href="https://youtube.com">youtube.com</a> to the task!</p>

<p><br /></p>
<h4 id="using-githubio-to-host-the-website-with-a-custom-domain-name">Using github.io to host the website with a custom domain name</h4>
<p>To be continuated</p>

<p><br /></p>
<h4 id="modifying-the-cname-of-my-domain-name-to-point-to-github-servers">Modifying the cname of my domain name to point to github servers</h4>

<p><br />
We are here now: Creating this page to document the whole thing</p>
:ET